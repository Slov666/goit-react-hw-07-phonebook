{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactListItem/ContactListItem.module.css","Components/App/App.module.css","Components/App/animate.module.css","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","Components/Notifications/Notifications.module.css","redux/contacts/contactsAction.js","redux/contacts/contactsOperations.js","redux/contacts/contactsSelectors.js","Components/ContactForm/ContactForm.js","Components/ContactListItem/ContactListItem.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/Notifications/Notifications.js","Components/App/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["module","exports","addContactsRequest","createAction","addContactsSuccess","addComtactsError","fetchContactsRequest","fetchContactsSuccess","fetchComtactsError","removeContactsRequest","removeContactsSuccess","removeComtactsError","filter","axios","defaults","baseURL","addContact","name","number","dispatch","contactsAction","post","then","response","data","catch","error","fetchContacts","get","removeContact","id","delete","getContacts","state","contacts","items","getFilter","getVisibleContacts","createSelector","item","toLowerCase","includes","getItemByID","find","ContactForm","handleOnChange","target","value","setState","handleSubmit","e","preventDefault","props","some","openModal","onAddContact","form","style","label","input","button","this","className","onSubmit","type","onChange","placeholder","required","Component","mapDispatchToProps","contactsOperations","connect","contactsSelectors","ownProps","contact","onRemove","container","span","onClick","onRemoveContact","ul","TransitionGroup","component","map","CSSTransition","key","timeout","classNames","onFilter","Notifications","css","box","onFetchTasks","onCheckContact","getLocalStorage","App","contactExist","setTimeout","title","in","appear","animate","unmountOnExit","contactReducer","createReducer","payload","action","filterReducer","loading","removeontactsSuccess","combineReducers","defaultMiddleware","getDefaultMiddleware","store","configureStore","reducer","contactsReducer","middleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.48265668.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2Qn94\",\"label\":\"ContactForm_label__2bJJ3\",\"input\":\"ContactForm_input__2wDkG\",\"button\":\"ContactForm_button__2oqA5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ContactListItem_ul__3PX22\",\"container\":\"ContactListItem_container__1qJUw\",\"button\":\"ContactListItem_button__2lGy1\",\"item\":\"ContactListItem_item__2hm-r\",\"span\":\"ContactListItem_span__1Kb0s\",\"enter\":\"ContactListItem_enter__3geaa\",\"enterActive\":\"ContactListItem_enterActive__37ocA\",\"exit\":\"ContactListItem_exit__2o7Sr\",\"exitActive\":\"ContactListItem_exitActive__lxHqp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1FtIG\",\"title\":\"App_title__Q5uUL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"animate_appear__2uMMJ\",\"appearActive\":\"animate_appearActive__1AxVL\",\"enter\":\"animate_enter__3uHnI\",\"enterActive\":\"animate_enterActive__3tBVy\",\"exit\":\"animate_exit__tpl3p\",\"exitActive\":\"animate_exitActive__1o2dF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ContactList_ul__1ETh6\",\"container\":\"ContactList_container__2F20m\",\"button\":\"ContactList_button__2zT4Z\",\"item\":\"ContactList_item__1uVYD\",\"span\":\"ContactList_span__1jFLw\",\"enter\":\"ContactList_enter__wm7jw\",\"enterActive\":\"ContactList_enterActive__1KVzz\",\"exit\":\"ContactList_exit__3B6r1\",\"exitActive\":\"ContactList_exitActive__1ZJ1H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__mKfQ3\",\"input\":\"Filter_input__3vJRn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Notifications_box__pX-jp\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContactsRequest = createAction(\"contact/addRequest\");\r\nconst addContactsSuccess = createAction(\"contact/addSuccess\");\r\nconst addComtactsError = createAction(\"contact/addError\");\r\n\r\nconst fetchContactsRequest = createAction(\"contact/fetchRequest\");\r\nconst fetchContactsSuccess = createAction(\"contact/fetchSuccess\");\r\nconst fetchComtactsError = createAction(\"contact/fetchError\");\r\n\r\nconst removeContactsRequest = createAction(\"contact/removeRequest\");\r\nconst removeContactsSuccess = createAction(\"contact/removeSuccess\");\r\nconst removeComtactsError = createAction(\"contact/removeError\");\r\n\r\nconst filter = createAction(\"type/filter\");\r\n\r\nexport default {\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addComtactsError,\r\n\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchComtactsError,\r\n\r\n  removeContactsRequest,\r\n  removeContactsSuccess,\r\n  removeComtactsError,\r\n\r\n  filter,\r\n};\r\n","import axios from \"axios\";\r\nimport contactsAction from \"./contactsAction\";\r\naxios.defaults.baseURL = 'http://localhost:2000';\r\n\r\nconst addContact = (name, number) => (dispatch) => {\r\n  dispatch(contactsAction.addContactsRequest());\r\n  axios\r\n    .post(\"/contacts\", { name, number })\r\n    .then((response) => {\r\n      dispatch(contactsAction.addContactsSuccess(response.data));\r\n    })\r\n    .catch((error) => dispatch(contactsAction.addComtactsError(error)));\r\n};\r\n\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(contactsAction.fetchContactsRequest());\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(contactsAction.fetchContactsSuccess(data)))\r\n    .catch((error) => dispatch(contactsAction.fetchComtactsError(error)));\r\n};\r\n\r\nconst removeContact = (id) => (dispatch) => {\r\n  dispatch(contactsAction.removeContactsRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(contactsAction.removeContactsSuccess(id)))\r\n    .catch((error) => contactsAction.removeComtactsError(error));\r\n};\r\n\r\nexport default {\r\n  addContact,\r\n  fetchContacts,\r\n  removeContact\r\n};\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\nconst getContacts = (state) => state.contacts.items;\r\nconst getFilter = (state) => state.contacts.filter;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getFilter, getContacts],\r\n  (filter, items) =>\r\n    items.filter((item) =>\r\n      item.name.toLowerCase().includes(filter.toLowerCase())\r\n    )\r\n);\r\n\r\nconst getItemByID = (state, id) => {\r\n  const contacts = getContacts(state);\r\n  return contacts.find((item) => item.id === id);\r\n};\r\nexport default {\r\n  getContacts,\r\n  getFilter,\r\n  getVisibleContacts,\r\n  getItemByID,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./ContactForm.module.css\";\r\n\r\nimport contactsSelectors from '../../redux/contacts/contactsSelectors'\r\nimport contactsOperations from \"../../redux/contacts/contactsOperations\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleOnChange = ({ target }) => {\r\n    const { value, name } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n\r\n    const isInclude = this.props.contacts.some(\r\n      (item) => item.name === this.state.name\r\n    );\r\n    if (isInclude) {\r\n      this.props.openModal();\r\n      this.setState({ name: \"\", number: \"\" });\r\n      return;\r\n    }\r\n\r\n    this.props.onAddContact(name, number);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  render() {\r\n    const { form, label, input, button } = style;\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={form} onSubmit={this.handleSubmit}>\r\n        <label className={label}>\r\n          Name\r\n          <input\r\n            className={input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={this.handleOnChange}\r\n            value={name}\r\n            placeholder=\"Enter name\"\r\n          />\r\n        </label>\r\n        <label className={label}>\r\n          Number\r\n          <input\r\n            className={input}\r\n            type=\"number\"\r\n            name=\"number\"\r\n            onChange={this.handleOnChange}\r\n            value={number}\r\n            placeholder=\"Enter number\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className={button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onAddContact: PropTypes.func,\r\n  openModal: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: contactsSelectors.getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: contactsOperations.addContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport contactsOperations from \"../../redux/contacts/contactsOperations\";\r\nimport style from \"./ContactListItem.module.css\";\r\nimport contactsSelectors from \"../../redux/contacts/contactsSelectors\";\r\n\r\nfunction ContactListItem({ name, number, onRemove }) {\r\n  const { container, button, item, span } = style;\r\n  return (\r\n    <li className={container}>\r\n      <div className={item}>\r\n        <span className={span}>Name:</span> {name}\r\n      </div>\r\n\r\n      <div className={item}>\r\n        <span className={span}>Ph.</span> {number}\r\n      </div>\r\n      <button className={button} type=\"button\" onClick={onRemove}></button>\r\n    </li>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst mapState = (state, ownProps) => {\r\n  const contact = contactsSelectors.getItemByID(state, ownProps.id);\r\n  return { ...contact };\r\n};\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onRemove: () => dispatch(contactsOperations.removeContact(ownProps.id)),\r\n});\r\n\r\nexport default connect(mapState, mapDispatchToProps)(ContactListItem);\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  onRemove: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport contactsAction from \"../../redux/contacts/contactsAction\";\r\nimport contactsSelectors from \"../../redux/contacts/contactsSelectors\";\r\nimport style from \"./ContactList.module.css\";\r\n\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\n\r\nconst ContactList = ({ contacts }) => {\r\n  const { ul } = style;\r\n  return (\r\n    <>\r\n      <TransitionGroup component=\"ul\" className={ul}>\r\n        {contacts.map((contact) => (\r\n          <CSSTransition key={contact.id} timeout={250} classNames={style}>\r\n            <ContactListItem id={contact.id} />\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: contactsSelectors.getVisibleContacts(state),\r\n});\r\nconst mapDispatchToProps = {\r\n  onRemoveContact: contactsAction.removeContact,\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsAction from \"../../redux/contacts/contactsAction\";\r\nimport contactsSelectors from \"../../redux/contacts/contactsSelectors\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onFilter }) => {\r\n  const { container, input } = style;\r\n  return (\r\n    <div className={container}>\r\n      <p>Find conctact by name</p>\r\n      <input\r\n        className={input}\r\n        type=\"text\"\r\n        onChange={(e) => onFilter(e.target.value)}\r\n        value={value}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onFilter: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: contactsSelectors.getFilter(state),\r\n});\r\nconst mapDispatchToProps = {\r\n  onFilter: contactsAction.filter,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react'\r\nimport css from './Notifications.module.css'\r\n\r\nexport default function Notifications() {\r\n    return (\r\n        <div className={css.box}>\r\n            Already exsist\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport style from \"./App.module.css\";\r\nimport animate from \"./animate.module.css\";\r\nimport contactsAction from \"../../redux/contacts/contactsAction\";\r\nimport contactsOperations from \"../../redux/contacts/contactsOperations\";\r\n\r\nimport ContactForm from \"../ContactForm/ContactForm\";\r\nimport ContactList from \"../ContactList/ContactList\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport Notifications from \"../Notifications/Notifications\";\r\n\r\nconst mapDispatchToProps = {\r\n  onFetchTasks: contactsOperations.fetchContacts,\r\n  onCheckContact: contactsAction.getLocalStorage,\r\n};\r\nclass App extends Component {\r\n  state = {\r\n    contactExist: false,\r\n  };\r\n  openModal = () => {\r\n    this.setState({ contactExist: true });\r\n    setTimeout(() => this.setState({ contactExist: false }), 3000);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.onFetchTasks()\r\n  }\r\n\r\n  render() {\r\n    const { contactExist } = this.state;\r\n    const { container, title } = style;\r\n    return (\r\n      <section className={container}>\r\n        <CSSTransition\r\n          in={true}\r\n          appear={true}\r\n          timeout={500}\r\n          classNames={animate}\r\n          unmountOnExit\r\n        >\r\n          <h2 className={title}>Phonebook</h2>\r\n        </CSSTransition>\r\n        <CSSTransition\r\n          classNames={animate}\r\n          in={contactExist}\r\n          timeout={250}\r\n          unmountOnExit\r\n        >\r\n          <Notifications />\r\n        </CSSTransition>\r\n\r\n        <ContactForm openModal={this.openModal} />\r\n        <h2 className={title}>Contacts</h2>\r\n        <ContactList />\r\n        <Filter />\r\n      </section>\r\n    );\r\n  }\r\n}\r\nexport default connect(null, mapDispatchToProps)(App);\r\nApp.propTypes = {\r\n  onCheckContact: PropTypes.func,\r\n  onFetchTasks: PropTypes.func,\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport contactsAction from \"./contactsAction\";\r\n\r\nconst addContact = (state, action) => {\r\n  const contact = action.payload;\r\n  return [...state, contact];\r\n};\r\nconst removeContact = (state, { payload }) => {\r\n  return state.filter((item) => item.id !== payload);\r\n};\r\n\r\nconst contactReducer = createReducer([], {\r\n  [contactsAction.fetchContactsSuccess]: (state, { payload }) => payload,\r\n  [contactsAction.addContactsSuccess]: addContact,\r\n  [contactsAction.removeContactsSuccess]: removeContact,\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [contactsAction.filter]: (state, action) => action.payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [contactsAction.fetchContactsRequest]: () => true,\r\n  [contactsAction.fetchContactsSuccess]: () => false,\r\n  [contactsAction.fetchComtactsError]: () => false,\r\n  [contactsAction.addContactsRequest]: () => true,\r\n  [contactsAction.addContactsSuccess]: () => false,\r\n  [contactsAction.addComtactsError]: () => false,\r\n  [contactsAction.removeContactsRequest]: () => true,\r\n  [contactsAction.removeontactsSuccess]: () => false,\r\n  [contactsAction.removeComtactsError]: () => false,\r\n});\r\n\r\n// const items = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case contactsAction.addContact.type:\r\n//       return [...state, payload.item];\r\n//     case contactsAction.removeContact.type:\r\n//       return state.filter((item) => item.id !== payload);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport default combineReducers({\r\n  items: contactReducer,\r\n  filter: filterReducer,\r\n  loading,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\n\r\nconst defaultMiddleware = getDefaultMiddleware();\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware: [...defaultMiddleware],\r\n});\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./Components/App/App\";\n\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}